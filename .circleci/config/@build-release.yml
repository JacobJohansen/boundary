version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-2502be88fa57c1e224989891cf4652828c621660 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-b2f59b2d4223729e0cfca83f651ade1039b52e39-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2502be88fa57c1e224989891cf4652828c621660-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2502be88fa57c1e224989891cf4652828c621660-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-2502be88fa57c1e224989891cf4652828c621660.tar.gz
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-10772cee179f7cf24d436b4871611f33f418be03-{{checksum ".buildcache/cache-keys/package-10772cee179f7cf24d436b4871611f33f418be03"}}
          name: Restore package cache
      - restore_cache:
          key: package-9876c067936c4a6e7050746442bf967f5b34926a-{{checksum ".buildcache/cache-keys/package-9876c067936c4a6e7050746442bf967f5b34926a"}}
          name: Restore package cache
      - restore_cache:
          key: package-fe60e51692b8df5457a412125686c0a4cb8d50d3-{{checksum ".buildcache/cache-keys/package-fe60e51692b8df5457a412125686c0a4cb8d50d3"}}
          name: Restore package cache
      - restore_cache:
          key: package-0ec9526bf2951e5ea564efa6c8915563126f778f-{{checksum ".buildcache/cache-keys/package-0ec9526bf2951e5ea564efa6c8915563126f778f"}}
          name: Restore package cache
      - restore_cache:
          key: package-c4e03355f920a8f9a60a65119379b1e7a864ac76-{{checksum ".buildcache/cache-keys/package-c4e03355f920a8f9a60a65119379b1e7a864ac76"}}
          name: Restore package cache
      - restore_cache:
          key: package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd-{{checksum ".buildcache/cache-keys/package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd"}}
          name: Restore package cache
      - restore_cache:
          key: package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4-{{checksum ".buildcache/cache-keys/package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4"}}
          name: Restore package cache
      - restore_cache:
          key: package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c-{{checksum ".buildcache/cache-keys/package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c"}}
          name: Restore package cache
      - restore_cache:
          key: package-caf15737808905814215648d1451f0ce57deccef-{{checksum ".buildcache/cache-keys/package-caf15737808905814215648d1451f0ce57deccef"}}
          name: Restore package cache
      - restore_cache:
          key: package-9a51c940a17ccc48a621b26696340c0c62596d04-{{checksum ".buildcache/cache-keys/package-9a51c940a17ccc48a621b26696340c0c62596d04"}}
          name: Restore package cache
      - restore_cache:
          key: package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc-{{checksum ".buildcache/cache-keys/package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc"}}
          name: Restore package cache
      - restore_cache:
          key: package-e9fb894e0a13fa34dbc853cb4efe80f705e39121-{{checksum ".buildcache/cache-keys/package-e9fb894e0a13fa34dbc853cb4efe80f705e39121"}}
          name: Restore package cache
      - restore_cache:
          key: package-44e8c23e32da50c1292c2f9da669ddcd870a8458-{{checksum ".buildcache/cache-keys/package-44e8c23e32da50c1292c2f9da669ddcd870a8458"}}
          name: Restore package cache
      - restore_cache:
          key: package-4686153fc25959d2c1347ae8d3598d973a7c8f24-{{checksum ".buildcache/cache-keys/package-4686153fc25959d2c1347ae8d3598d973a7c8f24"}}
          name: Restore package cache
      - restore_cache:
          key: package-63bddd6e567cd1f0e36794384d02f9906815347c-{{checksum ".buildcache/cache-keys/package-63bddd6e567cd1f0e36794384d02f9906815347c"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-75008e444f4ae973.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-75008e444f4ae973.tar.gz .buildcache/packages lockfile-75008e444f4ae973.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-75008e444f4ae973.tar.gz .buildcache/packages/store/*.json lockfile-75008e444f4ae973.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-75008e444f4ae973.yml
      - store_artifacts:
          path: packages-75008e444f4ae973.tar.gz
      - store_artifacts:
          path: meta-75008e444f4ae973.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-10772cee179f7cf24d436b4871611f33f418be03-{{checksum ".buildcache/cache-keys/package-10772cee179f7cf24d436b4871611f33f418be03"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-10772cee179f7cf24d436b4871611f33f418be03-{{checksum ".buildcache/cache-keys/package-10772cee179f7cf24d436b4871611f33f418be03"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 10772cee179f7cf24d436b4871611f33f418be03
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9876c067936c4a6e7050746442bf967f5b34926a-{{checksum ".buildcache/cache-keys/package-9876c067936c4a6e7050746442bf967f5b34926a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9876c067936c4a6e7050746442bf967f5b34926a-{{checksum ".buildcache/cache-keys/package-9876c067936c4a6e7050746442bf967f5b34926a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9876c067936c4a6e7050746442bf967f5b34926a
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fe60e51692b8df5457a412125686c0a4cb8d50d3-{{checksum ".buildcache/cache-keys/package-fe60e51692b8df5457a412125686c0a4cb8d50d3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fe60e51692b8df5457a412125686c0a4cb8d50d3-{{checksum ".buildcache/cache-keys/package-fe60e51692b8df5457a412125686c0a4cb8d50d3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fe60e51692b8df5457a412125686c0a4cb8d50d3
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0ec9526bf2951e5ea564efa6c8915563126f778f-{{checksum ".buildcache/cache-keys/package-0ec9526bf2951e5ea564efa6c8915563126f778f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0ec9526bf2951e5ea564efa6c8915563126f778f-{{checksum ".buildcache/cache-keys/package-0ec9526bf2951e5ea564efa6c8915563126f778f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0ec9526bf2951e5ea564efa6c8915563126f778f
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c4e03355f920a8f9a60a65119379b1e7a864ac76-{{checksum ".buildcache/cache-keys/package-c4e03355f920a8f9a60a65119379b1e7a864ac76"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c4e03355f920a8f9a60a65119379b1e7a864ac76-{{checksum ".buildcache/cache-keys/package-c4e03355f920a8f9a60a65119379b1e7a864ac76"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c4e03355f920a8f9a60a65119379b1e7a864ac76
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd-{{checksum ".buildcache/cache-keys/package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd-{{checksum ".buildcache/cache-keys/package-d7ad9779ef6992f46a90e4e7a5e4e2d536108efd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d7ad9779ef6992f46a90e4e7a5e4e2d536108efd
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4-{{checksum ".buildcache/cache-keys/package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4-{{checksum ".buildcache/cache-keys/package-408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 408bbdc66b20d1d08de037ad4ff9d0c4fe176dc4
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c-{{checksum ".buildcache/cache-keys/package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c-{{checksum ".buildcache/cache-keys/package-c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c8b63114e1968b9337ee1e5bc4022ac6ef8d6b4c
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-caf15737808905814215648d1451f0ce57deccef-{{checksum ".buildcache/cache-keys/package-caf15737808905814215648d1451f0ce57deccef"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-caf15737808905814215648d1451f0ce57deccef-{{checksum ".buildcache/cache-keys/package-caf15737808905814215648d1451f0ce57deccef"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: caf15737808905814215648d1451f0ce57deccef
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9a51c940a17ccc48a621b26696340c0c62596d04-{{checksum ".buildcache/cache-keys/package-9a51c940a17ccc48a621b26696340c0c62596d04"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9a51c940a17ccc48a621b26696340c0c62596d04-{{checksum ".buildcache/cache-keys/package-9a51c940a17ccc48a621b26696340c0c62596d04"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9a51c940a17ccc48a621b26696340c0c62596d04
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc-{{checksum ".buildcache/cache-keys/package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc-{{checksum ".buildcache/cache-keys/package-5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5604d6b56a3172cdd8c51cb2a2b0e2c1186651cc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e9fb894e0a13fa34dbc853cb4efe80f705e39121-{{checksum ".buildcache/cache-keys/package-e9fb894e0a13fa34dbc853cb4efe80f705e39121"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e9fb894e0a13fa34dbc853cb4efe80f705e39121-{{checksum ".buildcache/cache-keys/package-e9fb894e0a13fa34dbc853cb4efe80f705e39121"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e9fb894e0a13fa34dbc853cb4efe80f705e39121
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-44e8c23e32da50c1292c2f9da669ddcd870a8458-{{checksum ".buildcache/cache-keys/package-44e8c23e32da50c1292c2f9da669ddcd870a8458"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-44e8c23e32da50c1292c2f9da669ddcd870a8458-{{checksum ".buildcache/cache-keys/package-44e8c23e32da50c1292c2f9da669ddcd870a8458"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 44e8c23e32da50c1292c2f9da669ddcd870a8458
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4686153fc25959d2c1347ae8d3598d973a7c8f24-{{checksum ".buildcache/cache-keys/package-4686153fc25959d2c1347ae8d3598d973a7c8f24"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4686153fc25959d2c1347ae8d3598d973a7c8f24-{{checksum ".buildcache/cache-keys/package-4686153fc25959d2c1347ae8d3598d973a7c8f24"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4686153fc25959d2c1347ae8d3598d973a7c8f24
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-63bddd6e567cd1f0e36794384d02f9906815347c-{{checksum ".buildcache/cache-keys/package-63bddd6e567cd1f0e36794384d02f9906815347c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-63bddd6e567cd1f0e36794384d02f9906815347c-{{checksum ".buildcache/cache-keys/package-63bddd6e567cd1f0e36794384d02f9906815347c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 63bddd6e567cd1f0e36794384d02f9906815347c
workflows:
  build-75008e444f4ae973:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
